{"version":3,"sources":["App.js","index.js"],"names":["bellcurve","Highcharts","App","React","useState","values","setValues","showValues","setShowValues","getF","map","_","index","length","getX","value","Math","log","getY","fValues","console","pdf","className","AppBar","position","Toolbar","Typography","variant","Container","Grid","container","spacing","item","xs","TextField","onChange","e","target","split","sort","placeholder","Button","onClick","highcharts","options","chart","type","zoomType","title","text","series","data","x","cdf","ps","baseSeries","Number","marker","radius","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"oSAeAA,GAAUC,KAyJKC,MAvJf,WAAgB,IAAD,EACeC,IAAMC,SAAS,IAD9B,mBACNC,EADM,KACEC,EADF,OAEuBH,IAAMC,UAAS,GAFtC,mBAENG,EAFM,KAEMC,EAFN,KAOPC,EAAO,WAKX,OAHmBJ,EAAOK,KAAI,SAACC,EAAGC,GAChC,OAAQA,EAAQ,EAFG,IAEiBP,EAAOQ,WAKzCC,EAAO,WAIX,OAHmBT,EAAOK,KAAI,SAACK,EAAOH,GACpC,OAAOI,KAAKC,IAAIF,OAKdG,EAAO,WACX,IAAMC,EAAUV,IAMhB,OAJmBJ,EAAOK,KAAI,SAACK,EAAOH,GAEpC,OAAOI,KAAKC,IAAID,KAAKC,IAAI,GAAK,EAAIE,EAAQP,UAK9C,OADAQ,QAAQH,IAAII,IAAIhB,GAASA,GAEvB,yBAAKiB,UAAU,OACb,kBAACC,EAAA,EAAD,CAAQC,SAAS,UACf,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,6CAKJ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,IACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CACEC,SA1Ca,SAACC,GACxB9B,EAAU8B,EAAEC,OAAOtB,MAAMuB,MAAM,KAAKC,SA0C1BC,YAAY,sBAGhB,kBAACX,EAAA,EAAD,KACE,kBAACY,EAAA,EAAD,CAAQC,QAAS,kBAAMlC,GAAeD,KACnC,IADH,aAEa,KAEb,kBAACkC,EAAA,EAAD,CAAQC,QAAS,kBAAMlC,GAAeD,KACnC,IADH,cAEc,OAIjBA,GACC,kBAACsB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,8CACA,4BACG5B,EAAOK,KAAI,SAACK,GACX,OAAO,4BAAKA,QAIlB,kBAACc,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,wCACA,4BACGxB,IAAOC,KAAI,SAACK,GACX,OAAO,4BAAKA,QAIlB,kBAACc,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,wCACA,4BACGnB,IAAOJ,KAAI,SAACK,GACX,OAAO,4BAAKA,QAIlB,kBAACc,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GACb,wCACA,4BACGf,IAAOR,KAAI,SAACK,GACX,OAAO,4BAAKA,SAMtB,kBAAC,IAAD,CACE4B,WAAY1C,IACZ2C,QAAS,CACPC,MAAO,CACLC,KAAM,UACNC,SAAU,MAEZC,MAAO,CACLC,KAAM,8BAERC,OAAQ,CACN,CACEC,KAAMrC,IAAOJ,KAAI,SAAC0C,EAAGxC,GACnB,MAAO,CAACwC,EAAGlC,IAAON,YAM5B,kBAAC,IAAD,CACE+B,WAAY1C,IACZ2C,QAAS,CACPI,MAAO,CACLC,KAAM,oCAERC,OAAQ,CACN,CACEC,KAAME,IAAIhD,GAAQiD,UAK1B,kBAAC,IAAD,CACEX,WAAY1C,IACZ2C,QAAS,CACPI,MAAO,CACLC,KAAM,gCAERC,OAAQ,CACN,CAAEJ,KAAM,YAAaS,WAAY,GACjC,CACET,KAAM,UACNK,KAAM9B,IAAIhB,EAAOK,IAAI8C,SACrBC,OAAQ,CACNC,OAAQ,WCxJpBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFL,I","file":"static/js/main.70a67046.chunk.js","sourcesContent":["import {\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  Toolbar,\r\n  AppBar,\r\n  Typography,\r\n  Container\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport cdf from \"cumulative-distribution-function\";\r\nimport pdf from \"distributions-uniform-pdf\";\r\nimport bellcurve from \"highcharts/modules/histogram-bellcurve\";\r\nbellcurve(Highcharts);\r\n\r\nfunction App() {\r\n  const [values, setValues] = React.useState([]);\r\n  const [showValues, setShowValues] = React.useState(false);\r\n  const handleValueChane = (e) => {\r\n    setValues(e.target.value.split(\" \").sort());\r\n  };\r\n\r\n  const getF = () => {\r\n    const significance = 0.5;\r\n    const valuesList = values.map((_, index) => {\r\n      return (index + 1 - significance) / values.length;\r\n    });\r\n    return valuesList;\r\n  };\r\n\r\n  const getX = () => {\r\n    const valuesList = values.map((value, index) => {\r\n      return Math.log(value);\r\n    });\r\n    return valuesList;\r\n  };\r\n\r\n  const getY = () => {\r\n    const fValues = getF();\r\n    //console.log(\"f verileri:\", fValues);\r\n    const valuesList = values.map((value, index) => {\r\n      //console.log(\"index item:\", fValues[index]);\r\n      return Math.log(Math.log(1 / (1 - fValues[index])));\r\n    });\r\n    return valuesList;\r\n  };\r\n  console.log(pdf(values), values);\r\n  return (\r\n    <div className=\"App\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\">\r\n            Strength Analysis for Advanced Ceramics\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Container>\r\n        <Grid container spacing={12}>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              onChange={handleValueChane}\r\n              placeholder=\"Strength numbers\"\r\n            />\r\n          </Grid>\r\n          <Grid>\r\n            <Button onClick={() => setShowValues(!showValues)}>\r\n              {\" \"}\r\n              Show Datas{\" \"}\r\n            </Button>\r\n            <Button onClick={() => setShowValues(!showValues)}>\r\n              {\" \"}\r\n              Upload file{\" \"}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        {showValues && (\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={3}>\r\n              <h3>Strength [MPa]</h3>\r\n              <ul>\r\n                {values.map((value) => {\r\n                  return <li>{value}</li>;\r\n                })}\r\n              </ul>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <h3>F Values</h3>\r\n              <ul>\r\n                {getF().map((value) => {\r\n                  return <li>{value}</li>;\r\n                })}\r\n              </ul>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <h3>X Values</h3>\r\n              <ul>\r\n                {getX().map((value) => {\r\n                  return <li>{value}</li>;\r\n                })}\r\n              </ul>\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <h3>Y Values</h3>\r\n              <ul>\r\n                {getY().map((value) => {\r\n                  return <li>{value}</li>;\r\n                })}\r\n              </ul>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        <HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={{\r\n            chart: {\r\n              type: \"scatter\",\r\n              zoomType: \"xy\"\r\n            },\r\n            title: {\r\n              text: \"Weibull Distrubition Chart\"\r\n            },\r\n            series: [\r\n              {\r\n                data: getX().map((x, index) => {\r\n                  return [x, getY()[index]];\r\n                })\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n        <HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={{\r\n            title: {\r\n              text: \"Cumulative Distribution Function\"\r\n            },\r\n            series: [\r\n              {\r\n                data: cdf(values).ps()\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n        <HighchartsReact\r\n          highcharts={Highcharts}\r\n          options={{\r\n            title: {\r\n              text: \"Probability Density Function\"\r\n            },\r\n            series: [\r\n              { type: \"bellcurve\", baseSeries: 1 },\r\n              {\r\n                type: \"scatter\",\r\n                data: pdf(values.map(Number)),\r\n                marker: {\r\n                  radius: 5\r\n                }\r\n              }\r\n            ]\r\n          }}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  rootElement\r\n);\r\n"],"sourceRoot":""}